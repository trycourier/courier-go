// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/trycourier/courier-go/v3/core"
)

type BulkCreateJobParams struct {
	Message *InboundBulkMessage `json:"message,omitempty"`
}

type BulkCreateJobResponse struct {
	JobId string `json:"jobId"`

	_rawJSON json.RawMessage
}

func (b *BulkCreateJobResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler BulkCreateJobResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BulkCreateJobResponse(value)
	b._rawJSON = json.RawMessage(data)
	return nil
}

func (b *BulkCreateJobResponse) String() string {
	if len(b._rawJSON) > 0 {
		if value, err := core.StringifyJSON(b._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type BulkGetJobResponse struct {
	Job *JobDetails `json:"job,omitempty"`

	_rawJSON json.RawMessage
}

func (b *BulkGetJobResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler BulkGetJobResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BulkGetJobResponse(value)
	b._rawJSON = json.RawMessage(data)
	return nil
}

func (b *BulkGetJobResponse) String() string {
	if len(b._rawJSON) > 0 {
		if value, err := core.StringifyJSON(b._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type BulkGetJobUsersResponse struct {
	Items  []*BulkMessageUserResponse `json:"items,omitempty"`
	Paging *Paging                    `json:"paging,omitempty"`

	_rawJSON json.RawMessage
}

func (b *BulkGetJobUsersResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler BulkGetJobUsersResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BulkGetJobUsersResponse(value)
	b._rawJSON = json.RawMessage(data)
	return nil
}

func (b *BulkGetJobUsersResponse) String() string {
	if len(b._rawJSON) > 0 {
		if value, err := core.StringifyJSON(b._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type BulkIngestUsersParams struct {
	Users []*InboundBulkMessageUser `json:"users,omitempty"`

	_rawJSON json.RawMessage
}

func (b *BulkIngestUsersParams) UnmarshalJSON(data []byte) error {
	type unmarshaler BulkIngestUsersParams
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BulkIngestUsersParams(value)
	b._rawJSON = json.RawMessage(data)
	return nil
}

func (b *BulkIngestUsersParams) String() string {
	if len(b._rawJSON) > 0 {
		if value, err := core.StringifyJSON(b._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type InboundBulkMessage struct {
	// A unique identifier that represents the brand that should be used
	// for rendering the notification.
	Brand *string `json:"brand,omitempty"`
	// JSON that includes any data you want to pass to a message template.
	// The data will populate the corresponding template variables.
	Data   map[string]interface{} `json:"data,omitempty"`
	Event  *string                `json:"event,omitempty"`
	Locale map[string]interface{} `json:"locale,omitempty"`
	// JSON that is merged into the request sent by Courier to the provider
	// to override properties or to gain access to features in the provider
	// API that are not natively supported by Courier.
	Override interface{}           `json:"override,omitempty"`
	Message  *InboundBulkMessageV2 `json:"message,omitempty"`

	_rawJSON json.RawMessage
}

func (i *InboundBulkMessage) UnmarshalJSON(data []byte) error {
	type unmarshaler InboundBulkMessage
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = InboundBulkMessage(value)
	i._rawJSON = json.RawMessage(data)
	return nil
}

func (i *InboundBulkMessage) String() string {
	if len(i._rawJSON) > 0 {
		if value, err := core.StringifyJSON(i._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}
