// Code generated by Fern. DO NOT EDIT.

package bulk

import (
	context "context"
	v3 "github.com/trycourier/courier-go/v3"
	core "github.com/trycourier/courier-go/v3/core"
	internal "github.com/trycourier/courier-go/v3/internal"
	option "github.com/trycourier/courier-go/v3/option"
	os "os"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	if options.AuthorizationToken == "" {
		options.AuthorizationToken = os.Getenv("COURIER_AUTH_TOKEN")
	}
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

func (c *Client) CreateJob(
	ctx context.Context,
	request *v3.BulkCreateJobParams,
	opts ...option.IdempotentRequestOption,
) (*v3.BulkCreateJobResponse, error) {
	response, err := c.WithRawResponse.CreateJob(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Ingest user data into a Bulk Job
func (c *Client) IngestUsers(
	ctx context.Context,
	// A unique identifier representing the bulk job
	jobId string,
	request *v3.BulkIngestUsersParams,
	opts ...option.IdempotentRequestOption,
) error {
	_, err := c.WithRawResponse.IngestUsers(
		ctx,
		jobId,
		request,
		opts...,
	)
	if err != nil {
		return err
	}
	return nil
}

// Run a bulk job
func (c *Client) RunJob(
	ctx context.Context,
	// A unique identifier representing the bulk job
	jobId string,
	opts ...option.IdempotentRequestOption,
) error {
	_, err := c.WithRawResponse.RunJob(
		ctx,
		jobId,
		opts...,
	)
	if err != nil {
		return err
	}
	return nil
}

// Get a bulk job
func (c *Client) GetJob(
	ctx context.Context,
	// A unique identifier representing the bulk job
	jobId string,
	opts ...option.RequestOption,
) (*v3.BulkGetJobResponse, error) {
	response, err := c.WithRawResponse.GetJob(
		ctx,
		jobId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Get Bulk Job Users
func (c *Client) GetUsers(
	ctx context.Context,
	// A unique identifier representing the bulk job
	jobId string,
	request *v3.BulkGetUsersParams,
	opts ...option.RequestOption,
) (*v3.BulkGetJobUsersResponse, error) {
	response, err := c.WithRawResponse.GetUsers(
		ctx,
		jobId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
